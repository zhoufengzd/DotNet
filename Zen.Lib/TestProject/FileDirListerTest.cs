// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;

using Zen.Utilities.FileUtil;
using System.Text.RegularExpressions;
namespace _TestProject
{

    [TestClass()]
    public class FileDirListerTest
    {
        private TestContext testContextInstance;
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }


        [TestMethod()]
        public void GetFilesTest()
        {
            string queryDir = @"D:\Projects\_ObservationGround\_DevBook\Regex\Regular_Expression_Recipes_for_Windows_Developers";

            FileDirSearchOpt fso = new FileDirSearchOpt();
            SearchOpt searchOpt = new SearchOpt();
            searchOpt.IncludeFilter = @"\w+.cs$";
            searchOpt.ExcludeFilter = @"2-\d+.cs";
            searchOpt.RegexOptionList.Add(RegexOptions.IgnoreCase);
            fso.QueryDirectory = queryDir;
            fso.SearchOptions = searchOpt;
            fso.Recursive = true;

            List<string> fileList = FileDirLister.GetFiles(fso);
            Zen.Utilities.ObjSerializer.Save(@"c:\test.log", fileList);
        }

        [TestMethod()]
        public void GetDirectoriesTest()
        {
            string queryDir = @"D:\Projects\_ObservationGround";

            FileDirSearchOpt fso = new FileDirSearchOpt();
            SearchOpt searchOpt = new SearchOpt();
            searchOpt.IncludeFilter = @"(Net|CSharp|C#)";
            searchOpt.ExcludeFilter = @"(InterNet|Telnet)";
            searchOpt.RegexOptionList.Add(RegexOptions.IgnoreCase);
            fso.QueryDirectory = queryDir;
            fso.SearchOptions = searchOpt;
            fso.Recursive = true;

            try
            {
                List<string> dirList = FileDirLister.GetDirectories(fso);
            }
            catch (Exception)
            {
            }
        }
    }


}
